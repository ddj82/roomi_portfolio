{"version":3,"file":"static/js/209.bc0c04a5.chunk.js","mappings":"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","sources":["mocks/handlers.js","mocks/browser.js"],"sourcesContent":["import { http, HttpResponse } from 'msw'\n\nconst getPublicUrl = (path) => {\n    return `${process.env.PUBLIC_URL || ''}${path}`;\n};\n\n// 모킹 데이터 - 여러 개의 숙소 데이터\nconst mockRoomsData = [\n    {\n        accommodation_type: \"일/주/월 단위 단기임대 공간\",\n        additional_facilities: {},\n        address: \"서울 서대문구 신촌로\",\n        address_detail: \"100-115\",\n        amenities: null,\n        bathroom_count: 1,\n        bed_configs: null,\n        breakfast_service: \"\",\n        building_type: \"아파트\",\n        business_license_url: null,\n        check_in_time: \"15:00\",\n        check_out_time: \"11:00\",\n        checkin_service: \"\",\n        cleaning_fee: 0,\n        cleaning_fee_month: 0,\n        cleaning_fee_week: 50000,\n        cleaning_time: 60,\n        coordinate_lat: 37.5562107,\n        coordinate_long: 126.9393157,\n        created_at: \"2025-06-09T02:37:54.006Z\",\n        currency: \"KRW\",\n        day_enabled: false,\n        day_price: 0,\n        deposit: 0,\n        deposit_month: 0,\n        deposit_week: 300000,\n        description: \"오래된 아파트지만 제가 혼자 살았던곳이라 깔끔한 공간을 대여합니다~\\n\\n혼자 또는 둘이서 여행하기 좋은곳\\n무료주차가능(4주이상등록)\\n서울과 가깝고 역과 가까워 어디든 출발~\\n한달살기 추천합니다\",\n        detail_urls: [\n            getPublicUrl('/assets/images/room/img1.jpg'),\n            getPublicUrl('/assets/images/room/img2.jpg'),\n            getPublicUrl('/assets/images/room/img3.jpg'),\n            getPublicUrl('/assets/images/room/img4.jpg'),\n            getPublicUrl('/assets/images/room/img5.jpg'),\n            getPublicUrl('/assets/images/room/img6.jpg'),\n        ],\n        discounts: [\n            {type: 'weekly', days: 7, percentage: 0},\n            {type: 'weekly', days: 28, percentage: 5},\n            {type: 'weekly', days: 84, percentage: 10}\n        ],\n        facilities: {\n            wifi: '와이파이',\n            kitchen: '주방',\n            washing_machine: '세탁기',\n            ac_unit: '에어컨'\n        },\n        favorites: false,\n        features: {},\n        floor: 4,\n        floor_area: 16,\n        has_elevator: true,\n        has_parking: true,\n        host: {\n            name: 'admin',\n            profile_image: null\n        },\n        host_id: 1,\n        hour_enabled: false,\n        hour_price: 0,\n        house_rules: \"* 입주는 비대면 입니다\\n* 입주 확정될시 안내 문자 드립니다\\n* 사랑스런 애완동물은 입주불가입니다\\n* 성인 최대 2인 투숙가능입니다\\n(1인추가시 1박당 2만원추가)\\n* 전입불가입니다\\n* 전구역 금연입니다\\n* 임차인은 선관의무와 원상복구의 책임이 있으며 입주상태 그대로 퇴거해주셔야합니다\",\n        id: 1,\n        is_active: true,\n        is_auto_accepted: false,\n        is_confirmed: true,\n        is_deleted: false,\n        is_favorite: false,\n        is_rejected: false,\n        is_verified: false,\n        maintenance_explanation: \"\",\n        maintenance_fee: 0,\n        maintenance_fee_month: 0,\n        maintenance_fee_week: 70000,\n        max_guests: 2,\n        min_days: 1,\n        min_hours: null,\n        min_weeks: 1,\n        month_enabled: false,\n        month_price: 0,\n        prohibitions: ['반려동물 금지', '파티 금지', '흡연 금지', '추가 인원 금지'],\n        refund_policy: \"엄격한 환불 정책\\\\n• 체크인 7일 전까지 50% 환불\\\\n• 체크인 7일 전까지: 50% 환불\\\\n• 체크인 7일 전 ~ 당일: 환불 불가\\\\n• 체크인 이후: 환불 불가\",\n        reviews: [],\n        room_count: 2,\n        room_structure: \"투룸\",\n        room_type: \"LEASE\",\n        short_description: \"\",\n        symbol: \"₩\",\n        tags: [],\n        thumbnail_url: null,\n        title: \"test방\",\n        transportation_info: \"역 도보 5분\\n롯데마트 도보 2분\",\n        unavailable_dates: {\n            blocked_dates: [],\n            reservations: [],\n            custom_schedules: []\n        },\n        updated_at: \"2025-06-16T21:56:33.127Z\",\n        verified_at: null,\n        week_enabled: true,\n        week_price: 280000\n    },\n    {\n        accommodation_type: \"일/주/월 단위 단기임대 공간\",\n        additional_facilities: {},\n        address: \"서울 마포구 신촌로\",\n        address_detail: \"100-115\",\n        amenities: null,\n        bathroom_count: 1,\n        bed_configs: null,\n        breakfast_service: \"\",\n        building_type: \"아파트\",\n        business_license_url: null,\n        check_in_time: \"15:00\",\n        check_out_time: \"11:00\",\n        checkin_service: \"\",\n        cleaning_fee: 0,\n        cleaning_fee_month: 0,\n        cleaning_fee_week: 50000,\n        cleaning_time: 60,\n        coordinate_lat: 37.5562333,\n        coordinate_long: 126.9421377,\n        created_at: \"2025-06-09T02:37:54.006Z\",\n        currency: \"KRW\",\n        day_enabled: false,\n        day_price: 0,\n        deposit: 0,\n        deposit_month: 0,\n        deposit_week: 300000,\n        description: \"오래된 아파트지만 제가 혼자 살았던곳이라 깔끔한 공간을 대여합니다~\\n\\n혼자 또는 둘이서 여행하기 좋은곳\\n무료주차가능(4주이상등록)\\n서울과 가깝고 역과 가까워 어디든 출발~\\n한달살기 추천합니다\",\n        detail_urls: [\n            getPublicUrl('/assets/images/room/img1.jpg'),\n            getPublicUrl('/assets/images/room/img2.jpg'),\n            getPublicUrl('/assets/images/room/img3.jpg'),\n            getPublicUrl('/assets/images/room/img4.jpg'),\n            getPublicUrl('/assets/images/room/img5.jpg'),\n            getPublicUrl('/assets/images/room/img6.jpg'),\n        ],\n        discounts: [\n            {type: 'weekly', days: 7, percentage: 0},\n            {type: 'weekly', days: 28, percentage: 5},\n            {type: 'weekly', days: 84, percentage: 10}\n        ],\n        facilities: {\n            wifi: '와이파이',\n            kitchen: '주방',\n            washing_machine: '세탁기',\n            ac_unit: '에어컨'\n        },\n        favorites: false,\n        features: {},\n        floor: 4,\n        floor_area: 16,\n        has_elevator: true,\n        has_parking: true,\n        host: {\n            name: 'admin',\n            profile_image: null\n        },\n        host_id: 1,\n        hour_enabled: false,\n        hour_price: 0,\n        house_rules: \"* 입주는 비대면 입니다\\n* 입주 확정될시 안내 문자 드립니다\\n* 사랑스런 애완동물은 입주불가입니다\\n* 성인 최대 2인 투숙가능입니다\\n(1인추가시 1박당 2만원추가)\\n* 전입불가입니다\\n* 전구역 금연입니다\\n* 임차인은 선관의무와 원상복구의 책임이 있으며 입주상태 그대로 퇴거해주셔야합니다\",\n        id: 2,\n        is_active: true,\n        is_auto_accepted: false,\n        is_confirmed: true,\n        is_deleted: false,\n        is_favorite: false,\n        is_rejected: false,\n        is_verified: false,\n        maintenance_explanation: \"\",\n        maintenance_fee: 0,\n        maintenance_fee_month: 0,\n        maintenance_fee_week: 70000,\n        max_guests: 2,\n        min_days: 1,\n        min_hours: null,\n        min_weeks: 1,\n        month_enabled: false,\n        month_price: 0,\n        prohibitions: ['반려동물 금지', '파티 금지', '흡연 금지', '추가 인원 금지'],\n        refund_policy: \"엄격한 환불 정책\\\\n• 체크인 7일 전까지 50% 환불\\\\n• 체크인 7일 전까지: 50% 환불\\\\n• 체크인 7일 전 ~ 당일: 환불 불가\\\\n• 체크인 이후: 환불 불가\",\n        reviews: [],\n        room_count: 2,\n        room_structure: \"투룸\",\n        room_type: \"LEASE\",\n        short_description: \"\",\n        symbol: \"₩\",\n        tags: [],\n        thumbnail_url: null,\n        title: \"test방\",\n        transportation_info: \"역 도보 5분\\n롯데마트 도보 2분\",\n        unavailable_dates: {\n            blocked_dates: [],\n            reservations: [],\n            custom_schedules: []\n        },\n        updated_at: \"2025-06-16T21:56:33.127Z\",\n        verified_at: null,\n        week_enabled: true,\n        week_price: 280000\n    },\n    {\n        accommodation_type: \"일/주/월 단위 단기임대 공간\",\n        additional_facilities: {},\n        address: \"서울 용산구 한강대로\",\n        address_detail: \"100-115\",\n        amenities: null,\n        bathroom_count: 1,\n        bed_configs: null,\n        breakfast_service: \"\",\n        building_type: \"아파트\",\n        business_license_url: null,\n        check_in_time: \"15:00\",\n        check_out_time: \"11:00\",\n        checkin_service: \"\",\n        cleaning_fee: 0,\n        cleaning_fee_month: 0,\n        cleaning_fee_week: 50000,\n        cleaning_time: 60,\n        coordinate_lat: 37.5511247,\n        coordinate_long: 126.9729133,\n        created_at: \"2025-06-09T02:37:54.006Z\",\n        currency: \"KRW\",\n        day_enabled: false,\n        day_price: 0,\n        deposit: 0,\n        deposit_month: 0,\n        deposit_week: 300000,\n        description: \"오래된 아파트지만 제가 혼자 살았던곳이라 깔끔한 공간을 대여합니다~\\n\\n혼자 또는 둘이서 여행하기 좋은곳\\n무료주차가능(4주이상등록)\\n서울과 가깝고 역과 가까워 어디든 출발~\\n한달살기 추천합니다\",\n        detail_urls: [\n            getPublicUrl('/assets/images/room/img1.jpg'),\n            getPublicUrl('/assets/images/room/img2.jpg'),\n            getPublicUrl('/assets/images/room/img3.jpg'),\n            getPublicUrl('/assets/images/room/img4.jpg'),\n            getPublicUrl('/assets/images/room/img5.jpg'),\n            getPublicUrl('/assets/images/room/img6.jpg'),\n        ],\n        discounts: [\n            {type: 'weekly', days: 7, percentage: 0},\n            {type: 'weekly', days: 28, percentage: 5},\n            {type: 'weekly', days: 84, percentage: 10}\n        ],\n        facilities: {\n            wifi: '와이파이',\n            kitchen: '주방',\n            washing_machine: '세탁기',\n            ac_unit: '에어컨'\n        },\n        favorites: false,\n        features: {},\n        floor: 4,\n        floor_area: 16,\n        has_elevator: true,\n        has_parking: true,\n        host: {\n            name: 'admin',\n            profile_image: null\n        },\n        host_id: 1,\n        hour_enabled: false,\n        hour_price: 0,\n        house_rules: \"* 입주는 비대면 입니다\\n* 입주 확정될시 안내 문자 드립니다\\n* 사랑스런 애완동물은 입주불가입니다\\n* 성인 최대 2인 투숙가능입니다\\n(1인추가시 1박당 2만원추가)\\n* 전입불가입니다\\n* 전구역 금연입니다\\n* 임차인은 선관의무와 원상복구의 책임이 있으며 입주상태 그대로 퇴거해주셔야합니다\",\n        id: 3,\n        is_active: true,\n        is_auto_accepted: false,\n        is_confirmed: true,\n        is_deleted: false,\n        is_favorite: false,\n        is_rejected: false,\n        is_verified: false,\n        maintenance_explanation: \"\",\n        maintenance_fee: 0,\n        maintenance_fee_month: 0,\n        maintenance_fee_week: 70000,\n        max_guests: 2,\n        min_days: 1,\n        min_hours: null,\n        min_weeks: 1,\n        month_enabled: false,\n        month_price: 0,\n        prohibitions: ['반려동물 금지', '파티 금지', '흡연 금지', '추가 인원 금지'],\n        refund_policy: \"엄격한 환불 정책\\\\n• 체크인 7일 전까지 50% 환불\\\\n• 체크인 7일 전까지: 50% 환불\\\\n• 체크인 7일 전 ~ 당일: 환불 불가\\\\n• 체크인 이후: 환불 불가\",\n        reviews: [],\n        room_count: 2,\n        room_structure: \"투룸\",\n        room_type: \"LEASE\",\n        short_description: \"\",\n        symbol: \"₩\",\n        tags: [],\n        thumbnail_url: null,\n        title: \"test방\",\n        transportation_info: \"역 도보 5분\\n롯데마트 도보 2분\",\n        unavailable_dates: {\n            blocked_dates: [],\n            reservations: [],\n            custom_schedules: []\n        },\n        updated_at: \"2025-06-16T21:56:33.127Z\",\n        verified_at: null,\n        week_enabled: true,\n        week_price: 280000\n    },\n];\n\n// 모킹 데이터 - 유저\nconst mockUserData = {\n    \"id\": 1,\n    \"name\": \"ddj82\",\n    \"email\": \"test@test.com\",\n    \"profile_image\": null,\n    \"isHost\": true,\n    \"phone\": null,\n    \"gender\": \"MALE\",\n    \"account\": null,\n    \"bank\": null,\n    \"bank_holder\": null,\n    \"language\": \"ko\",\n    \"accept_alert\": true,\n    \"accept_email\": false,\n    \"accept_SMS\": false,\n    \"currency\": \"KRW\",\n    \"is_korean\": true\n};\n\nexport const handlers = [\n    // 메인 방 데이터 조회 모킹\n    http.get('/rooms', ({ request }) => {\n        // URL 파라미터들 추출\n        const url = new URL(request.url);\n        const swLat = url.searchParams.get('swLat');\n        const swLng = url.searchParams.get('swLng');\n        const neLat = url.searchParams.get('neLat');\n        const neLng = url.searchParams.get('neLng');\n        const locale = url.searchParams.get('locale');\n        const currency = url.searchParams.get('currency');\n\n        // 인증 토큰 체크 (필요하면)\n        const authHeader = request.headers.get('Authorization');\n        const hasAuth = !!authHeader;\n\n        console.log('MSW: rooms API 호출됨', {\n            swLat, swLng, neLat, neLng, locale, currency, hasAuth\n        });\n\n        // 응답 반환 (HttpResponse 사용)\n        return HttpResponse.json({\n            success: true,\n            data: {\n                items: mockRoomsData  // ← 이렇게 items 배열로 감싸기\n            },\n            total: mockRoomsData.length,\n            message: \"숙소 목록을 성공적으로 가져왔습니다.\"\n        }, {\n            status: 200,\n            // 0.5초 지연으로 실제 API 느낌 연출 (필요하면)\n            // delay: 500\n        });\n    }),\n\n    // 방 상세 조회 API 모킹\n    http.get('/rooms/:id', ({ request, params }) => {\n        const { id } = params;\n        const url = new URL(request.url);\n        const locale = url.searchParams.get('locale');\n        const currency = url.searchParams.get('currency');\n\n        console.log('MSW: room 상세 조회 API 호출됨', {\n            roomId: id,\n            locale,\n            currency\n        });\n\n        // ID로 방 찾기\n        const room = mockRoomsData.find(room => room.id === Number(id));\n\n        if (!room) {\n            return HttpResponse.json({\n                success: false,\n                message: \"해당 숙소를 찾을 수 없습니다.\",\n                data: null\n            }, {\n                status: 404\n            });\n        }\n\n        // 성공 응답\n        return HttpResponse.json({\n            success: true,\n            data: room,  // 단일 방 객체 반환\n            message: \"숙소 정보를 성공적으로 가져왔습니다.\"\n        }, {\n            status: 200\n        });\n    }),\n\n    // 로그인 API 모킹\n    http.post('/users/login', async ({request}) => {\n        // POST 요청 body 데이터 추출\n        const requestBody = await request.json();\n        const { email, password } = requestBody;\n        console.log('MSW: 로그인 API 호출됨', {\n            email,\n            password\n        });\n\n        // 가짜 JWT 토큰 생성\n        const mockToken = `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c`;\n\n        return HttpResponse.json({\n            message: \"로그인에 성공했습니다.\",\n            statusCode: 200,\n            success: true,\n            data: mockUserData,\n        }, {\n            status: 200,\n            headers: {\n                'Authorization': mockToken,  // 응답 헤더에 토큰 추가\n                'Content-Type': 'application/json'\n            }\n        });\n    }),\n\n    // 소셜 로그인 중복 확인 API 모킹\n    http.post('/users/validate', async ({ request }) => {\n        // POST 요청 body 데이터 추출\n        const requestBody = await request.json();\n        const { channel_uid, channel } = requestBody;\n\n        console.log('MSW: 소셜 로그인 중복 확인 API 호출됨', {\n            channel_uid,\n            channel\n        });\n\n        // Mock에서는 항상 가입된 계정으로 응답 (200)\n        return HttpResponse.json({\n            message: \"User already exists\",\n            statusCode: 200\n        }, {\n            status: 200\n        });\n    }),\n\n    // 소셜 로그인 API 모킹\n    http.post('/users/channel/login', async ({request}) => {\n        // POST 요청 body 데이터 추출\n        const requestBody = await request.json();\n        const { channel_uid, channel } = requestBody;\n        console.log('MSW: 소셜 로그인 API 호출됨', {\n            channel_uid,\n            channel\n        });\n\n        // 가짜 JWT 토큰 생성\n        const mockToken = `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c`;\n\n        return HttpResponse.json({\n            message: \"로그인에 성공했습니다.\",\n            statusCode: 200,\n            success: true,\n            data: mockUserData,\n        }, {\n            status: 200,\n            headers: {\n                'Authorization': mockToken,  // 응답 헤더에 토큰 추가\n                'Content-Type': 'application/json'\n            }\n        });\n    }),\n];","import { setupWorker } from 'msw/browser'\nimport { handlers } from './handlers'\n\nexport const worker = setupWorker(...handlers)\n\n// GitHub Pages용 설정\nif (typeof window !== 'undefined' && window.location.hostname.includes('github.io')) {\n    // 프로덕션 환경에서 MSW 로그 숨기기\n    worker.start({\n        onUnhandledRequest: 'bypass',\n        quiet: false, // 디버깅을 위해 일단 false\n    });\n}"],"names":["getPublicUrl","path","mockRoomsData","accommodation_type","additional_facilities","address","address_detail","amenities","bathroom_count","bed_configs","breakfast_service","building_type","business_license_url","check_in_time","check_out_time","checkin_service","cleaning_fee","cleaning_fee_month","cleaning_fee_week","cleaning_time","coordinate_lat","coordinate_long","created_at","currency","day_enabled","day_price","deposit","deposit_month","deposit_week","description","detail_urls","discounts","type","days","percentage","facilities","wifi","kitchen","washing_machine","ac_unit","favorites","features","floor","floor_area","has_elevator","has_parking","host","name","profile_image","host_id","hour_enabled","hour_price","house_rules","id","is_active","is_auto_accepted","is_confirmed","is_deleted","is_favorite","is_rejected","is_verified","maintenance_explanation","maintenance_fee","maintenance_fee_month","maintenance_fee_week","max_guests","min_days","min_hours","min_weeks","month_enabled","month_price","prohibitions","refund_policy","reviews","room_count","room_structure","room_type","short_description","symbol","tags","thumbnail_url","title","transportation_info","unavailable_dates","blocked_dates","reservations","custom_schedules","updated_at","verified_at","week_enabled","week_price","mockUserData","handlers","http","get","_ref","request","url","URL","swLat","searchParams","swLng","neLat","neLng","locale","hasAuth","headers","console","log","HttpResponse","json","success","data","items","total","length","message","status","_ref2","params","roomId","room","find","Number","post","async","_ref3","requestBody","email","password","statusCode","_ref4","channel_uid","channel","_ref5","worker","setupWorker","window","location","hostname","includes","start","onUnhandledRequest","quiet"],"sourceRoot":""}